############################################################################################

Individual-based simulation of evolutionary divergence under Fisher's geometrical model,
in a range of population genetic regimes

############################################################################################

For more details see: "The geometry and genetics of hybridization" , Appendix 2.
Schneemann H, Sanctis BD, Roze D, Bierne N, Welch JJ. 2020. The geometry and genetics of hybridization. Evolution (doi:10.1101/862235)

For questions, email: hilde.schneemann@evobio.eu

############################################################################################
########                 FILE DESCRIPTION                                           ########
############################################################################################

fichiers.cpp:
Functions to open input and output files, read parameter values from input file and
write them in output file.

fisher.h:
Header file: definitions of global variables, function prototypes

functions.cpp:
Functions used in recursion script to generate mutation coefficients

main.cpp:
main() function: reads parameter values in input file, and runs the simulation.

ranbin.cpp:
Functions to sample from Poisson, binomial and normal distributions (from Numerical Recipes in C)

rec_infSites.cpp:
Recombination functions, simulating either a single chromosome with crossing-over or independent segregation of all loci

recursion_allopatry.cpp:
Recursion function for individual-based simulation of evolutionary divergence for a single population under Fisher's geometrical model

############################################################################################
########                 COMPILATION                                                ########
############################################################################################


Before compilation, the boost library must be installed. (https://www.boost.org/)
In addition, the following header file must be downloaded and placed in the simulation code directory:
https://github.com/hildeschneemann/Fisher_divergence_simulation/blob/main/allopatry/MersenneTwister.h

To compile, make sure all *.cpp files and header files (*.h) are present in the same directory and run:

g++ -std=c++11 *.cpp -I/usr/local/include/boost

############################################################################################
########                 RUNTIME                                                    ########
############################################################################################

To run:

./a.out inputfile.txt


############################################################################################
########                 INPUTFILES                                                 ########
############################################################################################

The inputfile needs to specify the following parameters (see example inputfile.txt)

Input parameters:

** Population genetics parameters
N: size of the population (post-bottleneck if implemented); Number of diploid individuals
L: genome map length in Morgans (mean nb of cross-overs per meiosis); set to -1 for free recombination [-1 used in paper]
U: mutation rate per diploid genome

** Fitness landscape
k: curvature of fitness function
n: number of phenotypic traits

** Distribution of mutation effects
M: Flag for mutational effect model: 1 "bottom up"; 0 "top down"
s: The mean selection coefficient for random mutations in an optimal genotype
q: mean phenotypic dominance effect (set to 1/2 in published work)
F: inflation of variance of distribution of phenotypic dominance (set to -1 for a uniform distribution)

** Demographic/environmental change
E: Flag for environmental change (i.e. position of the optimum):
	-1 (optimum is fixed to match ancestral state + initial bottleneck) [not used in this paper]
	0  (optimum is fixed to match ancestral state)
	1  (oscillating over time) [not used in this paper]
	2  (fixed at 1, away from ancestral state)


** Simulation parameters
D:    Stop simulation after D fixations have occurred.
reps: Number of times simulation should be repeated



############################################################################################
########                 OUTPUTFILE                                                 ########
############################################################################################

The allopatry version will produce one outputfile called "res_*.txt".
This file lists the details of each fixation that has occured during the fixation, in the order in which they became fixed.

It has the following columns:
position: position of the fixed mutation in the genome (between 0 and 1; infinite-sites model)
mut_time: generation in which the mutation arose
fix_time: generation in which the mutation became fixed
opt_dist: position of the optimum for trait 1

for each of the n traits
mut_effect: mutational effect size on this trait
dom: dominance coefficient for this trait
